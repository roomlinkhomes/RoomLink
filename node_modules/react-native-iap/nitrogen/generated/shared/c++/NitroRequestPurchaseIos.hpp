///
/// NitroRequestPurchaseIos.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#if __has_include(<NitroModules/JSIConverter.hpp>)
#include <NitroModules/JSIConverter.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif
#if __has_include(<NitroModules/NitroDefines.hpp>)
#include <NitroModules/NitroDefines.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif



#include <string>
#include <optional>
#include <unordered_map>

namespace margelo::nitro::iap {

  /**
   * A struct which can be represented as a JavaScript object (NitroRequestPurchaseIos).
   */
  struct NitroRequestPurchaseIos {
  public:
    std::string sku     SWIFT_PRIVATE;
    std::optional<bool> andDangerouslyFinishTransactionAutomatically     SWIFT_PRIVATE;
    std::optional<std::string> appAccountToken     SWIFT_PRIVATE;
    std::optional<double> quantity     SWIFT_PRIVATE;
    std::optional<std::unordered_map<std::string, std::string>> withOffer     SWIFT_PRIVATE;

  public:
    NitroRequestPurchaseIos() = default;
    explicit NitroRequestPurchaseIos(std::string sku, std::optional<bool> andDangerouslyFinishTransactionAutomatically, std::optional<std::string> appAccountToken, std::optional<double> quantity, std::optional<std::unordered_map<std::string, std::string>> withOffer): sku(sku), andDangerouslyFinishTransactionAutomatically(andDangerouslyFinishTransactionAutomatically), appAccountToken(appAccountToken), quantity(quantity), withOffer(withOffer) {}
  };

} // namespace margelo::nitro::iap

namespace margelo::nitro {

  // C++ NitroRequestPurchaseIos <> JS NitroRequestPurchaseIos (object)
  template <>
  struct JSIConverter<margelo::nitro::iap::NitroRequestPurchaseIos> final {
    static inline margelo::nitro::iap::NitroRequestPurchaseIos fromJSI(jsi::Runtime& runtime, const jsi::Value& arg) {
      jsi::Object obj = arg.asObject(runtime);
      return margelo::nitro::iap::NitroRequestPurchaseIos(
        JSIConverter<std::string>::fromJSI(runtime, obj.getProperty(runtime, "sku")),
        JSIConverter<std::optional<bool>>::fromJSI(runtime, obj.getProperty(runtime, "andDangerouslyFinishTransactionAutomatically")),
        JSIConverter<std::optional<std::string>>::fromJSI(runtime, obj.getProperty(runtime, "appAccountToken")),
        JSIConverter<std::optional<double>>::fromJSI(runtime, obj.getProperty(runtime, "quantity")),
        JSIConverter<std::optional<std::unordered_map<std::string, std::string>>>::fromJSI(runtime, obj.getProperty(runtime, "withOffer"))
      );
    }
    static inline jsi::Value toJSI(jsi::Runtime& runtime, const margelo::nitro::iap::NitroRequestPurchaseIos& arg) {
      jsi::Object obj(runtime);
      obj.setProperty(runtime, "sku", JSIConverter<std::string>::toJSI(runtime, arg.sku));
      obj.setProperty(runtime, "andDangerouslyFinishTransactionAutomatically", JSIConverter<std::optional<bool>>::toJSI(runtime, arg.andDangerouslyFinishTransactionAutomatically));
      obj.setProperty(runtime, "appAccountToken", JSIConverter<std::optional<std::string>>::toJSI(runtime, arg.appAccountToken));
      obj.setProperty(runtime, "quantity", JSIConverter<std::optional<double>>::toJSI(runtime, arg.quantity));
      obj.setProperty(runtime, "withOffer", JSIConverter<std::optional<std::unordered_map<std::string, std::string>>>::toJSI(runtime, arg.withOffer));
      return obj;
    }
    static inline bool canConvert(jsi::Runtime& runtime, const jsi::Value& value) {
      if (!value.isObject()) {
        return false;
      }
      jsi::Object obj = value.getObject(runtime);
      if (!JSIConverter<std::string>::canConvert(runtime, obj.getProperty(runtime, "sku"))) return false;
      if (!JSIConverter<std::optional<bool>>::canConvert(runtime, obj.getProperty(runtime, "andDangerouslyFinishTransactionAutomatically"))) return false;
      if (!JSIConverter<std::optional<std::string>>::canConvert(runtime, obj.getProperty(runtime, "appAccountToken"))) return false;
      if (!JSIConverter<std::optional<double>>::canConvert(runtime, obj.getProperty(runtime, "quantity"))) return false;
      if (!JSIConverter<std::optional<std::unordered_map<std::string, std::string>>>::canConvert(runtime, obj.getProperty(runtime, "withOffer"))) return false;
      return true;
    }
  };

} // namespace margelo::nitro
