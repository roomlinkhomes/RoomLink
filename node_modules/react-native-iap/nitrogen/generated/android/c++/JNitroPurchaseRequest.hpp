///
/// JNitroPurchaseRequest.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "NitroPurchaseRequest.hpp"

#include "JNitroRequestPurchaseAndroid.hpp"
#include "JNitroRequestPurchaseIos.hpp"
#include "JNitroSubscriptionOffer.hpp"
#include "NitroRequestPurchaseAndroid.hpp"
#include "NitroRequestPurchaseIos.hpp"
#include "NitroSubscriptionOffer.hpp"
#include <optional>
#include <string>
#include <unordered_map>
#include <vector>

namespace margelo::nitro::iap {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "NitroPurchaseRequest" and the the Kotlin data class "NitroPurchaseRequest".
   */
  struct JNitroPurchaseRequest final: public jni::JavaClass<JNitroPurchaseRequest> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/iap/NitroPurchaseRequest;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct NitroPurchaseRequest by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    NitroPurchaseRequest toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldIos = clazz->getField<JNitroRequestPurchaseIos>("ios");
      jni::local_ref<JNitroRequestPurchaseIos> ios = this->getFieldValue(fieldIos);
      static const auto fieldAndroid = clazz->getField<JNitroRequestPurchaseAndroid>("android");
      jni::local_ref<JNitroRequestPurchaseAndroid> android = this->getFieldValue(fieldAndroid);
      return NitroPurchaseRequest(
        ios != nullptr ? std::make_optional(ios->toCpp()) : std::nullopt,
        android != nullptr ? std::make_optional(android->toCpp()) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JNitroPurchaseRequest::javaobject> fromCpp(const NitroPurchaseRequest& value) {
      return newInstance(
        value.ios.has_value() ? JNitroRequestPurchaseIos::fromCpp(value.ios.value()) : nullptr,
        value.android.has_value() ? JNitroRequestPurchaseAndroid::fromCpp(value.android.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::iap
