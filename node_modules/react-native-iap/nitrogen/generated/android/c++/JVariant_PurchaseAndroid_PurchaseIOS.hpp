///
/// JVariant_PurchaseAndroid_PurchaseIOS.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include <variant>

#include "PurchaseAndroid.hpp"
#include "PurchaseIOS.hpp"
#include <variant>
#include "JPurchaseAndroid.hpp"
#include <optional>
#include <string>
#include <vector>
#include "IapPlatform.hpp"
#include "JIapPlatform.hpp"
#include "PurchaseState.hpp"
#include "JPurchaseState.hpp"
#include "JPurchaseIOS.hpp"
#include "PurchaseOfferIOS.hpp"
#include "JPurchaseOfferIOS.hpp"

namespace margelo::nitro::iap {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ std::variant and the Java class "Variant_PurchaseAndroid_PurchaseIOS".
   */
  class JVariant_PurchaseAndroid_PurchaseIOS: public jni::JavaClass<JVariant_PurchaseAndroid_PurchaseIOS> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/iap/Variant_PurchaseAndroid_PurchaseIOS;";

    static jni::local_ref<JVariant_PurchaseAndroid_PurchaseIOS> create_0(jni::alias_ref<JPurchaseAndroid> value) {
      static const auto method = javaClassStatic()->getStaticMethod<JVariant_PurchaseAndroid_PurchaseIOS(jni::alias_ref<JPurchaseAndroid>)>("create");
      return method(javaClassStatic(), value);
    }
    static jni::local_ref<JVariant_PurchaseAndroid_PurchaseIOS> create_1(jni::alias_ref<JPurchaseIOS> value) {
      static const auto method = javaClassStatic()->getStaticMethod<JVariant_PurchaseAndroid_PurchaseIOS(jni::alias_ref<JPurchaseIOS>)>("create");
      return method(javaClassStatic(), value);
    }

    static jni::local_ref<JVariant_PurchaseAndroid_PurchaseIOS> fromCpp(const std::variant<PurchaseAndroid, PurchaseIOS>& variant) {
      switch (variant.index()) {
        case 0: return create_0(JPurchaseAndroid::fromCpp(std::get<0>(variant)));
        case 1: return create_1(JPurchaseIOS::fromCpp(std::get<1>(variant)));
        default: throw std::invalid_argument("Variant holds unknown index! (" + std::to_string(variant.index()) + ")");
      }
    }

    [[nodiscard]] std::variant<PurchaseAndroid, PurchaseIOS> toCpp() const;
  };

  namespace JVariant_PurchaseAndroid_PurchaseIOS_impl {
    class First: public jni::JavaClass<First, JVariant_PurchaseAndroid_PurchaseIOS> {
    public:
      static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/iap/Variant_PurchaseAndroid_PurchaseIOS$First;";
    
      [[nodiscard]] jni::local_ref<JPurchaseAndroid> getValue() const {
        static const auto field = javaClassStatic()->getField<JPurchaseAndroid>("value");
        return getFieldValue(field);
      }
    };
    
    class Second: public jni::JavaClass<Second, JVariant_PurchaseAndroid_PurchaseIOS> {
    public:
      static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/iap/Variant_PurchaseAndroid_PurchaseIOS$Second;";
    
      [[nodiscard]] jni::local_ref<JPurchaseIOS> getValue() const {
        static const auto field = javaClassStatic()->getField<JPurchaseIOS>("value");
        return getFieldValue(field);
      }
    };
  } // namespace JVariant_PurchaseAndroid_PurchaseIOS_impl
} // namespace margelo::nitro::iap
