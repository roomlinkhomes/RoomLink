///
/// JNitroDeepLinkOptionsAndroid.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "NitroDeepLinkOptionsAndroid.hpp"

#include <optional>
#include <string>

namespace margelo::nitro::iap {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "NitroDeepLinkOptionsAndroid" and the the Kotlin data class "NitroDeepLinkOptionsAndroid".
   */
  struct JNitroDeepLinkOptionsAndroid final: public jni::JavaClass<JNitroDeepLinkOptionsAndroid> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/iap/NitroDeepLinkOptionsAndroid;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct NitroDeepLinkOptionsAndroid by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    NitroDeepLinkOptionsAndroid toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldSkuAndroid = clazz->getField<jni::JString>("skuAndroid");
      jni::local_ref<jni::JString> skuAndroid = this->getFieldValue(fieldSkuAndroid);
      static const auto fieldPackageNameAndroid = clazz->getField<jni::JString>("packageNameAndroid");
      jni::local_ref<jni::JString> packageNameAndroid = this->getFieldValue(fieldPackageNameAndroid);
      return NitroDeepLinkOptionsAndroid(
        skuAndroid != nullptr ? std::make_optional(skuAndroid->toStdString()) : std::nullopt,
        packageNameAndroid != nullptr ? std::make_optional(packageNameAndroid->toStdString()) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JNitroDeepLinkOptionsAndroid::javaobject> fromCpp(const NitroDeepLinkOptionsAndroid& value) {
      return newInstance(
        value.skuAndroid.has_value() ? jni::make_jstring(value.skuAndroid.value()) : nullptr,
        value.packageNameAndroid.has_value() ? jni::make_jstring(value.packageNameAndroid.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::iap
