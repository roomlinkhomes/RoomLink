///
/// JNitroProduct.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "NitroProduct.hpp"

#include <optional>
#include <string>

namespace margelo::nitro::iap {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "NitroProduct" and the the Kotlin data class "NitroProduct".
   */
  struct JNitroProduct final: public jni::JavaClass<JNitroProduct> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/iap/NitroProduct;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct NitroProduct by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    NitroProduct toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldId = clazz->getField<jni::JString>("id");
      jni::local_ref<jni::JString> id = this->getFieldValue(fieldId);
      static const auto fieldTitle = clazz->getField<jni::JString>("title");
      jni::local_ref<jni::JString> title = this->getFieldValue(fieldTitle);
      static const auto fieldDescription = clazz->getField<jni::JString>("description");
      jni::local_ref<jni::JString> description = this->getFieldValue(fieldDescription);
      static const auto fieldType = clazz->getField<jni::JString>("type");
      jni::local_ref<jni::JString> type = this->getFieldValue(fieldType);
      static const auto fieldDisplayName = clazz->getField<jni::JString>("displayName");
      jni::local_ref<jni::JString> displayName = this->getFieldValue(fieldDisplayName);
      static const auto fieldDisplayPrice = clazz->getField<jni::JString>("displayPrice");
      jni::local_ref<jni::JString> displayPrice = this->getFieldValue(fieldDisplayPrice);
      static const auto fieldCurrency = clazz->getField<jni::JString>("currency");
      jni::local_ref<jni::JString> currency = this->getFieldValue(fieldCurrency);
      static const auto fieldPrice = clazz->getField<jni::JDouble>("price");
      jni::local_ref<jni::JDouble> price = this->getFieldValue(fieldPrice);
      static const auto fieldPlatform = clazz->getField<jni::JString>("platform");
      jni::local_ref<jni::JString> platform = this->getFieldValue(fieldPlatform);
      static const auto fieldTypeIOS = clazz->getField<jni::JString>("typeIOS");
      jni::local_ref<jni::JString> typeIOS = this->getFieldValue(fieldTypeIOS);
      static const auto fieldIsFamilyShareableIOS = clazz->getField<jni::JBoolean>("isFamilyShareableIOS");
      jni::local_ref<jni::JBoolean> isFamilyShareableIOS = this->getFieldValue(fieldIsFamilyShareableIOS);
      static const auto fieldJsonRepresentationIOS = clazz->getField<jni::JString>("jsonRepresentationIOS");
      jni::local_ref<jni::JString> jsonRepresentationIOS = this->getFieldValue(fieldJsonRepresentationIOS);
      static const auto fieldSubscriptionPeriodUnitIOS = clazz->getField<jni::JString>("subscriptionPeriodUnitIOS");
      jni::local_ref<jni::JString> subscriptionPeriodUnitIOS = this->getFieldValue(fieldSubscriptionPeriodUnitIOS);
      static const auto fieldSubscriptionPeriodNumberIOS = clazz->getField<jni::JDouble>("subscriptionPeriodNumberIOS");
      jni::local_ref<jni::JDouble> subscriptionPeriodNumberIOS = this->getFieldValue(fieldSubscriptionPeriodNumberIOS);
      static const auto fieldIntroductoryPriceIOS = clazz->getField<jni::JString>("introductoryPriceIOS");
      jni::local_ref<jni::JString> introductoryPriceIOS = this->getFieldValue(fieldIntroductoryPriceIOS);
      static const auto fieldIntroductoryPriceAsAmountIOS = clazz->getField<jni::JDouble>("introductoryPriceAsAmountIOS");
      jni::local_ref<jni::JDouble> introductoryPriceAsAmountIOS = this->getFieldValue(fieldIntroductoryPriceAsAmountIOS);
      static const auto fieldIntroductoryPricePaymentModeIOS = clazz->getField<jni::JString>("introductoryPricePaymentModeIOS");
      jni::local_ref<jni::JString> introductoryPricePaymentModeIOS = this->getFieldValue(fieldIntroductoryPricePaymentModeIOS);
      static const auto fieldIntroductoryPriceNumberOfPeriodsIOS = clazz->getField<jni::JDouble>("introductoryPriceNumberOfPeriodsIOS");
      jni::local_ref<jni::JDouble> introductoryPriceNumberOfPeriodsIOS = this->getFieldValue(fieldIntroductoryPriceNumberOfPeriodsIOS);
      static const auto fieldIntroductoryPriceSubscriptionPeriodIOS = clazz->getField<jni::JString>("introductoryPriceSubscriptionPeriodIOS");
      jni::local_ref<jni::JString> introductoryPriceSubscriptionPeriodIOS = this->getFieldValue(fieldIntroductoryPriceSubscriptionPeriodIOS);
      static const auto fieldOriginalPriceAndroid = clazz->getField<jni::JString>("originalPriceAndroid");
      jni::local_ref<jni::JString> originalPriceAndroid = this->getFieldValue(fieldOriginalPriceAndroid);
      static const auto fieldOriginalPriceAmountMicrosAndroid = clazz->getField<jni::JDouble>("originalPriceAmountMicrosAndroid");
      jni::local_ref<jni::JDouble> originalPriceAmountMicrosAndroid = this->getFieldValue(fieldOriginalPriceAmountMicrosAndroid);
      static const auto fieldIntroductoryPriceValueAndroid = clazz->getField<jni::JDouble>("introductoryPriceValueAndroid");
      jni::local_ref<jni::JDouble> introductoryPriceValueAndroid = this->getFieldValue(fieldIntroductoryPriceValueAndroid);
      static const auto fieldIntroductoryPriceCyclesAndroid = clazz->getField<jni::JDouble>("introductoryPriceCyclesAndroid");
      jni::local_ref<jni::JDouble> introductoryPriceCyclesAndroid = this->getFieldValue(fieldIntroductoryPriceCyclesAndroid);
      static const auto fieldIntroductoryPricePeriodAndroid = clazz->getField<jni::JString>("introductoryPricePeriodAndroid");
      jni::local_ref<jni::JString> introductoryPricePeriodAndroid = this->getFieldValue(fieldIntroductoryPricePeriodAndroid);
      static const auto fieldSubscriptionPeriodAndroid = clazz->getField<jni::JString>("subscriptionPeriodAndroid");
      jni::local_ref<jni::JString> subscriptionPeriodAndroid = this->getFieldValue(fieldSubscriptionPeriodAndroid);
      static const auto fieldFreeTrialPeriodAndroid = clazz->getField<jni::JString>("freeTrialPeriodAndroid");
      jni::local_ref<jni::JString> freeTrialPeriodAndroid = this->getFieldValue(fieldFreeTrialPeriodAndroid);
      static const auto fieldSubscriptionOfferDetailsAndroid = clazz->getField<jni::JString>("subscriptionOfferDetailsAndroid");
      jni::local_ref<jni::JString> subscriptionOfferDetailsAndroid = this->getFieldValue(fieldSubscriptionOfferDetailsAndroid);
      return NitroProduct(
        id->toStdString(),
        title->toStdString(),
        description->toStdString(),
        type->toStdString(),
        displayName != nullptr ? std::make_optional(displayName->toStdString()) : std::nullopt,
        displayPrice != nullptr ? std::make_optional(displayPrice->toStdString()) : std::nullopt,
        currency != nullptr ? std::make_optional(currency->toStdString()) : std::nullopt,
        price != nullptr ? std::make_optional(price->value()) : std::nullopt,
        platform->toStdString(),
        typeIOS != nullptr ? std::make_optional(typeIOS->toStdString()) : std::nullopt,
        isFamilyShareableIOS != nullptr ? std::make_optional(static_cast<bool>(isFamilyShareableIOS->value())) : std::nullopt,
        jsonRepresentationIOS != nullptr ? std::make_optional(jsonRepresentationIOS->toStdString()) : std::nullopt,
        subscriptionPeriodUnitIOS != nullptr ? std::make_optional(subscriptionPeriodUnitIOS->toStdString()) : std::nullopt,
        subscriptionPeriodNumberIOS != nullptr ? std::make_optional(subscriptionPeriodNumberIOS->value()) : std::nullopt,
        introductoryPriceIOS != nullptr ? std::make_optional(introductoryPriceIOS->toStdString()) : std::nullopt,
        introductoryPriceAsAmountIOS != nullptr ? std::make_optional(introductoryPriceAsAmountIOS->value()) : std::nullopt,
        introductoryPricePaymentModeIOS != nullptr ? std::make_optional(introductoryPricePaymentModeIOS->toStdString()) : std::nullopt,
        introductoryPriceNumberOfPeriodsIOS != nullptr ? std::make_optional(introductoryPriceNumberOfPeriodsIOS->value()) : std::nullopt,
        introductoryPriceSubscriptionPeriodIOS != nullptr ? std::make_optional(introductoryPriceSubscriptionPeriodIOS->toStdString()) : std::nullopt,
        originalPriceAndroid != nullptr ? std::make_optional(originalPriceAndroid->toStdString()) : std::nullopt,
        originalPriceAmountMicrosAndroid != nullptr ? std::make_optional(originalPriceAmountMicrosAndroid->value()) : std::nullopt,
        introductoryPriceValueAndroid != nullptr ? std::make_optional(introductoryPriceValueAndroid->value()) : std::nullopt,
        introductoryPriceCyclesAndroid != nullptr ? std::make_optional(introductoryPriceCyclesAndroid->value()) : std::nullopt,
        introductoryPricePeriodAndroid != nullptr ? std::make_optional(introductoryPricePeriodAndroid->toStdString()) : std::nullopt,
        subscriptionPeriodAndroid != nullptr ? std::make_optional(subscriptionPeriodAndroid->toStdString()) : std::nullopt,
        freeTrialPeriodAndroid != nullptr ? std::make_optional(freeTrialPeriodAndroid->toStdString()) : std::nullopt,
        subscriptionOfferDetailsAndroid != nullptr ? std::make_optional(subscriptionOfferDetailsAndroid->toStdString()) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JNitroProduct::javaobject> fromCpp(const NitroProduct& value) {
      return newInstance(
        jni::make_jstring(value.id),
        jni::make_jstring(value.title),
        jni::make_jstring(value.description),
        jni::make_jstring(value.type),
        value.displayName.has_value() ? jni::make_jstring(value.displayName.value()) : nullptr,
        value.displayPrice.has_value() ? jni::make_jstring(value.displayPrice.value()) : nullptr,
        value.currency.has_value() ? jni::make_jstring(value.currency.value()) : nullptr,
        value.price.has_value() ? jni::JDouble::valueOf(value.price.value()) : nullptr,
        jni::make_jstring(value.platform),
        value.typeIOS.has_value() ? jni::make_jstring(value.typeIOS.value()) : nullptr,
        value.isFamilyShareableIOS.has_value() ? jni::JBoolean::valueOf(value.isFamilyShareableIOS.value()) : nullptr,
        value.jsonRepresentationIOS.has_value() ? jni::make_jstring(value.jsonRepresentationIOS.value()) : nullptr,
        value.subscriptionPeriodUnitIOS.has_value() ? jni::make_jstring(value.subscriptionPeriodUnitIOS.value()) : nullptr,
        value.subscriptionPeriodNumberIOS.has_value() ? jni::JDouble::valueOf(value.subscriptionPeriodNumberIOS.value()) : nullptr,
        value.introductoryPriceIOS.has_value() ? jni::make_jstring(value.introductoryPriceIOS.value()) : nullptr,
        value.introductoryPriceAsAmountIOS.has_value() ? jni::JDouble::valueOf(value.introductoryPriceAsAmountIOS.value()) : nullptr,
        value.introductoryPricePaymentModeIOS.has_value() ? jni::make_jstring(value.introductoryPricePaymentModeIOS.value()) : nullptr,
        value.introductoryPriceNumberOfPeriodsIOS.has_value() ? jni::JDouble::valueOf(value.introductoryPriceNumberOfPeriodsIOS.value()) : nullptr,
        value.introductoryPriceSubscriptionPeriodIOS.has_value() ? jni::make_jstring(value.introductoryPriceSubscriptionPeriodIOS.value()) : nullptr,
        value.originalPriceAndroid.has_value() ? jni::make_jstring(value.originalPriceAndroid.value()) : nullptr,
        value.originalPriceAmountMicrosAndroid.has_value() ? jni::JDouble::valueOf(value.originalPriceAmountMicrosAndroid.value()) : nullptr,
        value.introductoryPriceValueAndroid.has_value() ? jni::JDouble::valueOf(value.introductoryPriceValueAndroid.value()) : nullptr,
        value.introductoryPriceCyclesAndroid.has_value() ? jni::JDouble::valueOf(value.introductoryPriceCyclesAndroid.value()) : nullptr,
        value.introductoryPricePeriodAndroid.has_value() ? jni::make_jstring(value.introductoryPricePeriodAndroid.value()) : nullptr,
        value.subscriptionPeriodAndroid.has_value() ? jni::make_jstring(value.subscriptionPeriodAndroid.value()) : nullptr,
        value.freeTrialPeriodAndroid.has_value() ? jni::make_jstring(value.freeTrialPeriodAndroid.value()) : nullptr,
        value.subscriptionOfferDetailsAndroid.has_value() ? jni::make_jstring(value.subscriptionOfferDetailsAndroid.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::iap
