///
/// JNitroFinishTransactionAndroidParams.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "NitroFinishTransactionAndroidParams.hpp"

#include <optional>
#include <string>

namespace margelo::nitro::iap {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "NitroFinishTransactionAndroidParams" and the the Kotlin data class "NitroFinishTransactionAndroidParams".
   */
  struct JNitroFinishTransactionAndroidParams final: public jni::JavaClass<JNitroFinishTransactionAndroidParams> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/iap/NitroFinishTransactionAndroidParams;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct NitroFinishTransactionAndroidParams by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    NitroFinishTransactionAndroidParams toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldPurchaseToken = clazz->getField<jni::JString>("purchaseToken");
      jni::local_ref<jni::JString> purchaseToken = this->getFieldValue(fieldPurchaseToken);
      static const auto fieldIsConsumable = clazz->getField<jni::JBoolean>("isConsumable");
      jni::local_ref<jni::JBoolean> isConsumable = this->getFieldValue(fieldIsConsumable);
      return NitroFinishTransactionAndroidParams(
        purchaseToken->toStdString(),
        isConsumable != nullptr ? std::make_optional(static_cast<bool>(isConsumable->value())) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JNitroFinishTransactionAndroidParams::javaobject> fromCpp(const NitroFinishTransactionAndroidParams& value) {
      return newInstance(
        jni::make_jstring(value.purchaseToken),
        value.isConsumable.has_value() ? jni::JBoolean::valueOf(value.isConsumable.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::iap
