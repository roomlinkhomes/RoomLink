///
/// JNitroReceiptValidationResultAndroid.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "NitroReceiptValidationResultAndroid.hpp"

#include <optional>
#include <string>

namespace margelo::nitro::iap {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "NitroReceiptValidationResultAndroid" and the the Kotlin data class "NitroReceiptValidationResultAndroid".
   */
  struct JNitroReceiptValidationResultAndroid final: public jni::JavaClass<JNitroReceiptValidationResultAndroid> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/iap/NitroReceiptValidationResultAndroid;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct NitroReceiptValidationResultAndroid by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    NitroReceiptValidationResultAndroid toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldAutoRenewing = clazz->getField<jboolean>("autoRenewing");
      jboolean autoRenewing = this->getFieldValue(fieldAutoRenewing);
      static const auto fieldBetaProduct = clazz->getField<jboolean>("betaProduct");
      jboolean betaProduct = this->getFieldValue(fieldBetaProduct);
      static const auto fieldCancelDate = clazz->getField<jni::JDouble>("cancelDate");
      jni::local_ref<jni::JDouble> cancelDate = this->getFieldValue(fieldCancelDate);
      static const auto fieldCancelReason = clazz->getField<jni::JString>("cancelReason");
      jni::local_ref<jni::JString> cancelReason = this->getFieldValue(fieldCancelReason);
      static const auto fieldDeferredDate = clazz->getField<jni::JDouble>("deferredDate");
      jni::local_ref<jni::JDouble> deferredDate = this->getFieldValue(fieldDeferredDate);
      static const auto fieldDeferredSku = clazz->getField<jni::JDouble>("deferredSku");
      jni::local_ref<jni::JDouble> deferredSku = this->getFieldValue(fieldDeferredSku);
      static const auto fieldFreeTrialEndDate = clazz->getField<double>("freeTrialEndDate");
      double freeTrialEndDate = this->getFieldValue(fieldFreeTrialEndDate);
      static const auto fieldGracePeriodEndDate = clazz->getField<double>("gracePeriodEndDate");
      double gracePeriodEndDate = this->getFieldValue(fieldGracePeriodEndDate);
      static const auto fieldParentProductId = clazz->getField<jni::JString>("parentProductId");
      jni::local_ref<jni::JString> parentProductId = this->getFieldValue(fieldParentProductId);
      static const auto fieldProductId = clazz->getField<jni::JString>("productId");
      jni::local_ref<jni::JString> productId = this->getFieldValue(fieldProductId);
      static const auto fieldProductType = clazz->getField<jni::JString>("productType");
      jni::local_ref<jni::JString> productType = this->getFieldValue(fieldProductType);
      static const auto fieldPurchaseDate = clazz->getField<double>("purchaseDate");
      double purchaseDate = this->getFieldValue(fieldPurchaseDate);
      static const auto fieldQuantity = clazz->getField<double>("quantity");
      double quantity = this->getFieldValue(fieldQuantity);
      static const auto fieldReceiptId = clazz->getField<jni::JString>("receiptId");
      jni::local_ref<jni::JString> receiptId = this->getFieldValue(fieldReceiptId);
      static const auto fieldRenewalDate = clazz->getField<double>("renewalDate");
      double renewalDate = this->getFieldValue(fieldRenewalDate);
      static const auto fieldTerm = clazz->getField<jni::JString>("term");
      jni::local_ref<jni::JString> term = this->getFieldValue(fieldTerm);
      static const auto fieldTermSku = clazz->getField<jni::JString>("termSku");
      jni::local_ref<jni::JString> termSku = this->getFieldValue(fieldTermSku);
      static const auto fieldTestTransaction = clazz->getField<jboolean>("testTransaction");
      jboolean testTransaction = this->getFieldValue(fieldTestTransaction);
      return NitroReceiptValidationResultAndroid(
        static_cast<bool>(autoRenewing),
        static_cast<bool>(betaProduct),
        cancelDate != nullptr ? std::make_optional(cancelDate->value()) : std::nullopt,
        cancelReason->toStdString(),
        deferredDate != nullptr ? std::make_optional(deferredDate->value()) : std::nullopt,
        deferredSku != nullptr ? std::make_optional(deferredSku->value()) : std::nullopt,
        freeTrialEndDate,
        gracePeriodEndDate,
        parentProductId->toStdString(),
        productId->toStdString(),
        productType->toStdString(),
        purchaseDate,
        quantity,
        receiptId->toStdString(),
        renewalDate,
        term->toStdString(),
        termSku->toStdString(),
        static_cast<bool>(testTransaction)
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JNitroReceiptValidationResultAndroid::javaobject> fromCpp(const NitroReceiptValidationResultAndroid& value) {
      return newInstance(
        value.autoRenewing,
        value.betaProduct,
        value.cancelDate.has_value() ? jni::JDouble::valueOf(value.cancelDate.value()) : nullptr,
        jni::make_jstring(value.cancelReason),
        value.deferredDate.has_value() ? jni::JDouble::valueOf(value.deferredDate.value()) : nullptr,
        value.deferredSku.has_value() ? jni::JDouble::valueOf(value.deferredSku.value()) : nullptr,
        value.freeTrialEndDate,
        value.gracePeriodEndDate,
        jni::make_jstring(value.parentProductId),
        jni::make_jstring(value.productId),
        jni::make_jstring(value.productType),
        value.purchaseDate,
        value.quantity,
        jni::make_jstring(value.receiptId),
        value.renewalDate,
        jni::make_jstring(value.term),
        jni::make_jstring(value.termSku),
        value.testTransaction
      );
    }
  };

} // namespace margelo::nitro::iap
