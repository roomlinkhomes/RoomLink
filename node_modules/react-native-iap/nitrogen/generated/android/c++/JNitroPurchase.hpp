///
/// JNitroPurchase.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "NitroPurchase.hpp"

#include <optional>
#include <string>

namespace margelo::nitro::iap {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "NitroPurchase" and the the Kotlin data class "NitroPurchase".
   */
  struct JNitroPurchase final: public jni::JavaClass<JNitroPurchase> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/iap/NitroPurchase;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct NitroPurchase by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    NitroPurchase toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldId = clazz->getField<jni::JString>("id");
      jni::local_ref<jni::JString> id = this->getFieldValue(fieldId);
      static const auto fieldProductId = clazz->getField<jni::JString>("productId");
      jni::local_ref<jni::JString> productId = this->getFieldValue(fieldProductId);
      static const auto fieldTransactionDate = clazz->getField<double>("transactionDate");
      double transactionDate = this->getFieldValue(fieldTransactionDate);
      static const auto fieldPurchaseToken = clazz->getField<jni::JString>("purchaseToken");
      jni::local_ref<jni::JString> purchaseToken = this->getFieldValue(fieldPurchaseToken);
      static const auto fieldPlatform = clazz->getField<jni::JString>("platform");
      jni::local_ref<jni::JString> platform = this->getFieldValue(fieldPlatform);
      static const auto fieldQuantity = clazz->getField<double>("quantity");
      double quantity = this->getFieldValue(fieldQuantity);
      static const auto fieldPurchaseState = clazz->getField<jni::JString>("purchaseState");
      jni::local_ref<jni::JString> purchaseState = this->getFieldValue(fieldPurchaseState);
      static const auto fieldIsAutoRenewing = clazz->getField<jboolean>("isAutoRenewing");
      jboolean isAutoRenewing = this->getFieldValue(fieldIsAutoRenewing);
      static const auto fieldQuantityIOS = clazz->getField<jni::JDouble>("quantityIOS");
      jni::local_ref<jni::JDouble> quantityIOS = this->getFieldValue(fieldQuantityIOS);
      static const auto fieldOriginalTransactionDateIOS = clazz->getField<jni::JDouble>("originalTransactionDateIOS");
      jni::local_ref<jni::JDouble> originalTransactionDateIOS = this->getFieldValue(fieldOriginalTransactionDateIOS);
      static const auto fieldOriginalTransactionIdentifierIOS = clazz->getField<jni::JString>("originalTransactionIdentifierIOS");
      jni::local_ref<jni::JString> originalTransactionIdentifierIOS = this->getFieldValue(fieldOriginalTransactionIdentifierIOS);
      static const auto fieldAppAccountToken = clazz->getField<jni::JString>("appAccountToken");
      jni::local_ref<jni::JString> appAccountToken = this->getFieldValue(fieldAppAccountToken);
      static const auto fieldPurchaseTokenAndroid = clazz->getField<jni::JString>("purchaseTokenAndroid");
      jni::local_ref<jni::JString> purchaseTokenAndroid = this->getFieldValue(fieldPurchaseTokenAndroid);
      static const auto fieldDataAndroid = clazz->getField<jni::JString>("dataAndroid");
      jni::local_ref<jni::JString> dataAndroid = this->getFieldValue(fieldDataAndroid);
      static const auto fieldSignatureAndroid = clazz->getField<jni::JString>("signatureAndroid");
      jni::local_ref<jni::JString> signatureAndroid = this->getFieldValue(fieldSignatureAndroid);
      static const auto fieldAutoRenewingAndroid = clazz->getField<jni::JBoolean>("autoRenewingAndroid");
      jni::local_ref<jni::JBoolean> autoRenewingAndroid = this->getFieldValue(fieldAutoRenewingAndroid);
      static const auto fieldPurchaseStateAndroid = clazz->getField<jni::JDouble>("purchaseStateAndroid");
      jni::local_ref<jni::JDouble> purchaseStateAndroid = this->getFieldValue(fieldPurchaseStateAndroid);
      static const auto fieldIsAcknowledgedAndroid = clazz->getField<jni::JBoolean>("isAcknowledgedAndroid");
      jni::local_ref<jni::JBoolean> isAcknowledgedAndroid = this->getFieldValue(fieldIsAcknowledgedAndroid);
      static const auto fieldPackageNameAndroid = clazz->getField<jni::JString>("packageNameAndroid");
      jni::local_ref<jni::JString> packageNameAndroid = this->getFieldValue(fieldPackageNameAndroid);
      static const auto fieldObfuscatedAccountIdAndroid = clazz->getField<jni::JString>("obfuscatedAccountIdAndroid");
      jni::local_ref<jni::JString> obfuscatedAccountIdAndroid = this->getFieldValue(fieldObfuscatedAccountIdAndroid);
      static const auto fieldObfuscatedProfileIdAndroid = clazz->getField<jni::JString>("obfuscatedProfileIdAndroid");
      jni::local_ref<jni::JString> obfuscatedProfileIdAndroid = this->getFieldValue(fieldObfuscatedProfileIdAndroid);
      return NitroPurchase(
        id->toStdString(),
        productId->toStdString(),
        transactionDate,
        purchaseToken != nullptr ? std::make_optional(purchaseToken->toStdString()) : std::nullopt,
        platform->toStdString(),
        quantity,
        purchaseState->toStdString(),
        static_cast<bool>(isAutoRenewing),
        quantityIOS != nullptr ? std::make_optional(quantityIOS->value()) : std::nullopt,
        originalTransactionDateIOS != nullptr ? std::make_optional(originalTransactionDateIOS->value()) : std::nullopt,
        originalTransactionIdentifierIOS != nullptr ? std::make_optional(originalTransactionIdentifierIOS->toStdString()) : std::nullopt,
        appAccountToken != nullptr ? std::make_optional(appAccountToken->toStdString()) : std::nullopt,
        purchaseTokenAndroid != nullptr ? std::make_optional(purchaseTokenAndroid->toStdString()) : std::nullopt,
        dataAndroid != nullptr ? std::make_optional(dataAndroid->toStdString()) : std::nullopt,
        signatureAndroid != nullptr ? std::make_optional(signatureAndroid->toStdString()) : std::nullopt,
        autoRenewingAndroid != nullptr ? std::make_optional(static_cast<bool>(autoRenewingAndroid->value())) : std::nullopt,
        purchaseStateAndroid != nullptr ? std::make_optional(purchaseStateAndroid->value()) : std::nullopt,
        isAcknowledgedAndroid != nullptr ? std::make_optional(static_cast<bool>(isAcknowledgedAndroid->value())) : std::nullopt,
        packageNameAndroid != nullptr ? std::make_optional(packageNameAndroid->toStdString()) : std::nullopt,
        obfuscatedAccountIdAndroid != nullptr ? std::make_optional(obfuscatedAccountIdAndroid->toStdString()) : std::nullopt,
        obfuscatedProfileIdAndroid != nullptr ? std::make_optional(obfuscatedProfileIdAndroid->toStdString()) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JNitroPurchase::javaobject> fromCpp(const NitroPurchase& value) {
      return newInstance(
        jni::make_jstring(value.id),
        jni::make_jstring(value.productId),
        value.transactionDate,
        value.purchaseToken.has_value() ? jni::make_jstring(value.purchaseToken.value()) : nullptr,
        jni::make_jstring(value.platform),
        value.quantity,
        jni::make_jstring(value.purchaseState),
        value.isAutoRenewing,
        value.quantityIOS.has_value() ? jni::JDouble::valueOf(value.quantityIOS.value()) : nullptr,
        value.originalTransactionDateIOS.has_value() ? jni::JDouble::valueOf(value.originalTransactionDateIOS.value()) : nullptr,
        value.originalTransactionIdentifierIOS.has_value() ? jni::make_jstring(value.originalTransactionIdentifierIOS.value()) : nullptr,
        value.appAccountToken.has_value() ? jni::make_jstring(value.appAccountToken.value()) : nullptr,
        value.purchaseTokenAndroid.has_value() ? jni::make_jstring(value.purchaseTokenAndroid.value()) : nullptr,
        value.dataAndroid.has_value() ? jni::make_jstring(value.dataAndroid.value()) : nullptr,
        value.signatureAndroid.has_value() ? jni::make_jstring(value.signatureAndroid.value()) : nullptr,
        value.autoRenewingAndroid.has_value() ? jni::JBoolean::valueOf(value.autoRenewingAndroid.value()) : nullptr,
        value.purchaseStateAndroid.has_value() ? jni::JDouble::valueOf(value.purchaseStateAndroid.value()) : nullptr,
        value.isAcknowledgedAndroid.has_value() ? jni::JBoolean::valueOf(value.isAcknowledgedAndroid.value()) : nullptr,
        value.packageNameAndroid.has_value() ? jni::make_jstring(value.packageNameAndroid.value()) : nullptr,
        value.obfuscatedAccountIdAndroid.has_value() ? jni::make_jstring(value.obfuscatedAccountIdAndroid.value()) : nullptr,
        value.obfuscatedProfileIdAndroid.has_value() ? jni::make_jstring(value.obfuscatedProfileIdAndroid.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::iap
