///
/// JNitroRequestPurchaseAndroid.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "NitroRequestPurchaseAndroid.hpp"

#include "JNitroSubscriptionOffer.hpp"
#include "NitroSubscriptionOffer.hpp"
#include <optional>
#include <string>
#include <vector>

namespace margelo::nitro::iap {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "NitroRequestPurchaseAndroid" and the the Kotlin data class "NitroRequestPurchaseAndroid".
   */
  struct JNitroRequestPurchaseAndroid final: public jni::JavaClass<JNitroRequestPurchaseAndroid> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/iap/NitroRequestPurchaseAndroid;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct NitroRequestPurchaseAndroid by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    NitroRequestPurchaseAndroid toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldSkus = clazz->getField<jni::JArrayClass<jni::JString>>("skus");
      jni::local_ref<jni::JArrayClass<jni::JString>> skus = this->getFieldValue(fieldSkus);
      static const auto fieldObfuscatedAccountIdAndroid = clazz->getField<jni::JString>("obfuscatedAccountIdAndroid");
      jni::local_ref<jni::JString> obfuscatedAccountIdAndroid = this->getFieldValue(fieldObfuscatedAccountIdAndroid);
      static const auto fieldObfuscatedProfileIdAndroid = clazz->getField<jni::JString>("obfuscatedProfileIdAndroid");
      jni::local_ref<jni::JString> obfuscatedProfileIdAndroid = this->getFieldValue(fieldObfuscatedProfileIdAndroid);
      static const auto fieldIsOfferPersonalized = clazz->getField<jni::JBoolean>("isOfferPersonalized");
      jni::local_ref<jni::JBoolean> isOfferPersonalized = this->getFieldValue(fieldIsOfferPersonalized);
      static const auto fieldSubscriptionOffers = clazz->getField<jni::JArrayClass<JNitroSubscriptionOffer>>("subscriptionOffers");
      jni::local_ref<jni::JArrayClass<JNitroSubscriptionOffer>> subscriptionOffers = this->getFieldValue(fieldSubscriptionOffers);
      static const auto fieldReplacementModeAndroid = clazz->getField<jni::JDouble>("replacementModeAndroid");
      jni::local_ref<jni::JDouble> replacementModeAndroid = this->getFieldValue(fieldReplacementModeAndroid);
      static const auto fieldPurchaseTokenAndroid = clazz->getField<jni::JString>("purchaseTokenAndroid");
      jni::local_ref<jni::JString> purchaseTokenAndroid = this->getFieldValue(fieldPurchaseTokenAndroid);
      return NitroRequestPurchaseAndroid(
        [&]() {
          size_t __size = skus->size();
          std::vector<std::string> __vector;
          __vector.reserve(__size);
          for (size_t __i = 0; __i < __size; __i++) {
            auto __element = skus->getElement(__i);
            __vector.push_back(__element->toStdString());
          }
          return __vector;
        }(),
        obfuscatedAccountIdAndroid != nullptr ? std::make_optional(obfuscatedAccountIdAndroid->toStdString()) : std::nullopt,
        obfuscatedProfileIdAndroid != nullptr ? std::make_optional(obfuscatedProfileIdAndroid->toStdString()) : std::nullopt,
        isOfferPersonalized != nullptr ? std::make_optional(static_cast<bool>(isOfferPersonalized->value())) : std::nullopt,
        subscriptionOffers != nullptr ? std::make_optional([&]() {
          size_t __size = subscriptionOffers->size();
          std::vector<NitroSubscriptionOffer> __vector;
          __vector.reserve(__size);
          for (size_t __i = 0; __i < __size; __i++) {
            auto __element = subscriptionOffers->getElement(__i);
            __vector.push_back(__element->toCpp());
          }
          return __vector;
        }()) : std::nullopt,
        replacementModeAndroid != nullptr ? std::make_optional(replacementModeAndroid->value()) : std::nullopt,
        purchaseTokenAndroid != nullptr ? std::make_optional(purchaseTokenAndroid->toStdString()) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JNitroRequestPurchaseAndroid::javaobject> fromCpp(const NitroRequestPurchaseAndroid& value) {
      return newInstance(
        [&]() {
          size_t __size = value.skus.size();
          jni::local_ref<jni::JArrayClass<jni::JString>> __array = jni::JArrayClass<jni::JString>::newArray(__size);
          for (size_t __i = 0; __i < __size; __i++) {
            const auto& __element = value.skus[__i];
            __array->setElement(__i, *jni::make_jstring(__element));
          }
          return __array;
        }(),
        value.obfuscatedAccountIdAndroid.has_value() ? jni::make_jstring(value.obfuscatedAccountIdAndroid.value()) : nullptr,
        value.obfuscatedProfileIdAndroid.has_value() ? jni::make_jstring(value.obfuscatedProfileIdAndroid.value()) : nullptr,
        value.isOfferPersonalized.has_value() ? jni::JBoolean::valueOf(value.isOfferPersonalized.value()) : nullptr,
        value.subscriptionOffers.has_value() ? [&]() {
          size_t __size = value.subscriptionOffers.value().size();
          jni::local_ref<jni::JArrayClass<JNitroSubscriptionOffer>> __array = jni::JArrayClass<JNitroSubscriptionOffer>::newArray(__size);
          for (size_t __i = 0; __i < __size; __i++) {
            const auto& __element = value.subscriptionOffers.value()[__i];
            __array->setElement(__i, *JNitroSubscriptionOffer::fromCpp(__element));
          }
          return __array;
        }() : nullptr,
        value.replacementModeAndroid.has_value() ? jni::JDouble::valueOf(value.replacementModeAndroid.value()) : nullptr,
        value.purchaseTokenAndroid.has_value() ? jni::make_jstring(value.purchaseTokenAndroid.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::iap
