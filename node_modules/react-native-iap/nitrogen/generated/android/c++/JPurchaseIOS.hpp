///
/// JPurchaseIOS.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "PurchaseIOS.hpp"

#include "IapPlatform.hpp"
#include "JIapPlatform.hpp"
#include "JPurchaseOfferIOS.hpp"
#include "JPurchaseState.hpp"
#include "PurchaseOfferIOS.hpp"
#include "PurchaseState.hpp"
#include <optional>
#include <string>
#include <vector>

namespace margelo::nitro::iap {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "PurchaseIOS" and the the Kotlin data class "PurchaseIOS".
   */
  struct JPurchaseIOS final: public jni::JavaClass<JPurchaseIOS> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/iap/PurchaseIOS;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct PurchaseIOS by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    PurchaseIOS toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldAppAccountToken = clazz->getField<jni::JString>("appAccountToken");
      jni::local_ref<jni::JString> appAccountToken = this->getFieldValue(fieldAppAccountToken);
      static const auto fieldAppBundleIdIOS = clazz->getField<jni::JString>("appBundleIdIOS");
      jni::local_ref<jni::JString> appBundleIdIOS = this->getFieldValue(fieldAppBundleIdIOS);
      static const auto fieldCountryCodeIOS = clazz->getField<jni::JString>("countryCodeIOS");
      jni::local_ref<jni::JString> countryCodeIOS = this->getFieldValue(fieldCountryCodeIOS);
      static const auto fieldCurrencyCodeIOS = clazz->getField<jni::JString>("currencyCodeIOS");
      jni::local_ref<jni::JString> currencyCodeIOS = this->getFieldValue(fieldCurrencyCodeIOS);
      static const auto fieldCurrencySymbolIOS = clazz->getField<jni::JString>("currencySymbolIOS");
      jni::local_ref<jni::JString> currencySymbolIOS = this->getFieldValue(fieldCurrencySymbolIOS);
      static const auto fieldEnvironmentIOS = clazz->getField<jni::JString>("environmentIOS");
      jni::local_ref<jni::JString> environmentIOS = this->getFieldValue(fieldEnvironmentIOS);
      static const auto fieldExpirationDateIOS = clazz->getField<jni::JDouble>("expirationDateIOS");
      jni::local_ref<jni::JDouble> expirationDateIOS = this->getFieldValue(fieldExpirationDateIOS);
      static const auto fieldId = clazz->getField<jni::JString>("id");
      jni::local_ref<jni::JString> id = this->getFieldValue(fieldId);
      static const auto fieldIds = clazz->getField<jni::JArrayClass<jni::JString>>("ids");
      jni::local_ref<jni::JArrayClass<jni::JString>> ids = this->getFieldValue(fieldIds);
      static const auto fieldIsAutoRenewing = clazz->getField<jboolean>("isAutoRenewing");
      jboolean isAutoRenewing = this->getFieldValue(fieldIsAutoRenewing);
      static const auto fieldIsUpgradedIOS = clazz->getField<jni::JBoolean>("isUpgradedIOS");
      jni::local_ref<jni::JBoolean> isUpgradedIOS = this->getFieldValue(fieldIsUpgradedIOS);
      static const auto fieldOfferIOS = clazz->getField<JPurchaseOfferIOS>("offerIOS");
      jni::local_ref<JPurchaseOfferIOS> offerIOS = this->getFieldValue(fieldOfferIOS);
      static const auto fieldOriginalTransactionDateIOS = clazz->getField<jni::JDouble>("originalTransactionDateIOS");
      jni::local_ref<jni::JDouble> originalTransactionDateIOS = this->getFieldValue(fieldOriginalTransactionDateIOS);
      static const auto fieldOriginalTransactionIdentifierIOS = clazz->getField<jni::JString>("originalTransactionIdentifierIOS");
      jni::local_ref<jni::JString> originalTransactionIdentifierIOS = this->getFieldValue(fieldOriginalTransactionIdentifierIOS);
      static const auto fieldOwnershipTypeIOS = clazz->getField<jni::JString>("ownershipTypeIOS");
      jni::local_ref<jni::JString> ownershipTypeIOS = this->getFieldValue(fieldOwnershipTypeIOS);
      static const auto fieldPlatform = clazz->getField<JIapPlatform>("platform");
      jni::local_ref<JIapPlatform> platform = this->getFieldValue(fieldPlatform);
      static const auto fieldProductId = clazz->getField<jni::JString>("productId");
      jni::local_ref<jni::JString> productId = this->getFieldValue(fieldProductId);
      static const auto fieldPurchaseState = clazz->getField<JPurchaseState>("purchaseState");
      jni::local_ref<JPurchaseState> purchaseState = this->getFieldValue(fieldPurchaseState);
      static const auto fieldPurchaseToken = clazz->getField<jni::JString>("purchaseToken");
      jni::local_ref<jni::JString> purchaseToken = this->getFieldValue(fieldPurchaseToken);
      static const auto fieldQuantity = clazz->getField<double>("quantity");
      double quantity = this->getFieldValue(fieldQuantity);
      static const auto fieldQuantityIOS = clazz->getField<jni::JDouble>("quantityIOS");
      jni::local_ref<jni::JDouble> quantityIOS = this->getFieldValue(fieldQuantityIOS);
      static const auto fieldReasonIOS = clazz->getField<jni::JString>("reasonIOS");
      jni::local_ref<jni::JString> reasonIOS = this->getFieldValue(fieldReasonIOS);
      static const auto fieldReasonStringRepresentationIOS = clazz->getField<jni::JString>("reasonStringRepresentationIOS");
      jni::local_ref<jni::JString> reasonStringRepresentationIOS = this->getFieldValue(fieldReasonStringRepresentationIOS);
      static const auto fieldRevocationDateIOS = clazz->getField<jni::JDouble>("revocationDateIOS");
      jni::local_ref<jni::JDouble> revocationDateIOS = this->getFieldValue(fieldRevocationDateIOS);
      static const auto fieldRevocationReasonIOS = clazz->getField<jni::JString>("revocationReasonIOS");
      jni::local_ref<jni::JString> revocationReasonIOS = this->getFieldValue(fieldRevocationReasonIOS);
      static const auto fieldStorefrontCountryCodeIOS = clazz->getField<jni::JString>("storefrontCountryCodeIOS");
      jni::local_ref<jni::JString> storefrontCountryCodeIOS = this->getFieldValue(fieldStorefrontCountryCodeIOS);
      static const auto fieldSubscriptionGroupIdIOS = clazz->getField<jni::JString>("subscriptionGroupIdIOS");
      jni::local_ref<jni::JString> subscriptionGroupIdIOS = this->getFieldValue(fieldSubscriptionGroupIdIOS);
      static const auto fieldTransactionDate = clazz->getField<double>("transactionDate");
      double transactionDate = this->getFieldValue(fieldTransactionDate);
      static const auto fieldTransactionReasonIOS = clazz->getField<jni::JString>("transactionReasonIOS");
      jni::local_ref<jni::JString> transactionReasonIOS = this->getFieldValue(fieldTransactionReasonIOS);
      static const auto fieldWebOrderLineItemIdIOS = clazz->getField<jni::JString>("webOrderLineItemIdIOS");
      jni::local_ref<jni::JString> webOrderLineItemIdIOS = this->getFieldValue(fieldWebOrderLineItemIdIOS);
      return PurchaseIOS(
        appAccountToken != nullptr ? std::make_optional(appAccountToken->toStdString()) : std::nullopt,
        appBundleIdIOS != nullptr ? std::make_optional(appBundleIdIOS->toStdString()) : std::nullopt,
        countryCodeIOS != nullptr ? std::make_optional(countryCodeIOS->toStdString()) : std::nullopt,
        currencyCodeIOS != nullptr ? std::make_optional(currencyCodeIOS->toStdString()) : std::nullopt,
        currencySymbolIOS != nullptr ? std::make_optional(currencySymbolIOS->toStdString()) : std::nullopt,
        environmentIOS != nullptr ? std::make_optional(environmentIOS->toStdString()) : std::nullopt,
        expirationDateIOS != nullptr ? std::make_optional(expirationDateIOS->value()) : std::nullopt,
        id->toStdString(),
        ids != nullptr ? std::make_optional([&]() {
          size_t __size = ids->size();
          std::vector<std::string> __vector;
          __vector.reserve(__size);
          for (size_t __i = 0; __i < __size; __i++) {
            auto __element = ids->getElement(__i);
            __vector.push_back(__element->toStdString());
          }
          return __vector;
        }()) : std::nullopt,
        static_cast<bool>(isAutoRenewing),
        isUpgradedIOS != nullptr ? std::make_optional(static_cast<bool>(isUpgradedIOS->value())) : std::nullopt,
        offerIOS != nullptr ? std::make_optional(offerIOS->toCpp()) : std::nullopt,
        originalTransactionDateIOS != nullptr ? std::make_optional(originalTransactionDateIOS->value()) : std::nullopt,
        originalTransactionIdentifierIOS != nullptr ? std::make_optional(originalTransactionIdentifierIOS->toStdString()) : std::nullopt,
        ownershipTypeIOS != nullptr ? std::make_optional(ownershipTypeIOS->toStdString()) : std::nullopt,
        platform->toCpp(),
        productId->toStdString(),
        purchaseState->toCpp(),
        purchaseToken != nullptr ? std::make_optional(purchaseToken->toStdString()) : std::nullopt,
        quantity,
        quantityIOS != nullptr ? std::make_optional(quantityIOS->value()) : std::nullopt,
        reasonIOS != nullptr ? std::make_optional(reasonIOS->toStdString()) : std::nullopt,
        reasonStringRepresentationIOS != nullptr ? std::make_optional(reasonStringRepresentationIOS->toStdString()) : std::nullopt,
        revocationDateIOS != nullptr ? std::make_optional(revocationDateIOS->value()) : std::nullopt,
        revocationReasonIOS != nullptr ? std::make_optional(revocationReasonIOS->toStdString()) : std::nullopt,
        storefrontCountryCodeIOS != nullptr ? std::make_optional(storefrontCountryCodeIOS->toStdString()) : std::nullopt,
        subscriptionGroupIdIOS != nullptr ? std::make_optional(subscriptionGroupIdIOS->toStdString()) : std::nullopt,
        transactionDate,
        transactionReasonIOS != nullptr ? std::make_optional(transactionReasonIOS->toStdString()) : std::nullopt,
        webOrderLineItemIdIOS != nullptr ? std::make_optional(webOrderLineItemIdIOS->toStdString()) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JPurchaseIOS::javaobject> fromCpp(const PurchaseIOS& value) {
      return newInstance(
        value.appAccountToken.has_value() ? jni::make_jstring(value.appAccountToken.value()) : nullptr,
        value.appBundleIdIOS.has_value() ? jni::make_jstring(value.appBundleIdIOS.value()) : nullptr,
        value.countryCodeIOS.has_value() ? jni::make_jstring(value.countryCodeIOS.value()) : nullptr,
        value.currencyCodeIOS.has_value() ? jni::make_jstring(value.currencyCodeIOS.value()) : nullptr,
        value.currencySymbolIOS.has_value() ? jni::make_jstring(value.currencySymbolIOS.value()) : nullptr,
        value.environmentIOS.has_value() ? jni::make_jstring(value.environmentIOS.value()) : nullptr,
        value.expirationDateIOS.has_value() ? jni::JDouble::valueOf(value.expirationDateIOS.value()) : nullptr,
        jni::make_jstring(value.id),
        value.ids.has_value() ? [&]() {
          size_t __size = value.ids.value().size();
          jni::local_ref<jni::JArrayClass<jni::JString>> __array = jni::JArrayClass<jni::JString>::newArray(__size);
          for (size_t __i = 0; __i < __size; __i++) {
            const auto& __element = value.ids.value()[__i];
            __array->setElement(__i, *jni::make_jstring(__element));
          }
          return __array;
        }() : nullptr,
        value.isAutoRenewing,
        value.isUpgradedIOS.has_value() ? jni::JBoolean::valueOf(value.isUpgradedIOS.value()) : nullptr,
        value.offerIOS.has_value() ? JPurchaseOfferIOS::fromCpp(value.offerIOS.value()) : nullptr,
        value.originalTransactionDateIOS.has_value() ? jni::JDouble::valueOf(value.originalTransactionDateIOS.value()) : nullptr,
        value.originalTransactionIdentifierIOS.has_value() ? jni::make_jstring(value.originalTransactionIdentifierIOS.value()) : nullptr,
        value.ownershipTypeIOS.has_value() ? jni::make_jstring(value.ownershipTypeIOS.value()) : nullptr,
        JIapPlatform::fromCpp(value.platform),
        jni::make_jstring(value.productId),
        JPurchaseState::fromCpp(value.purchaseState),
        value.purchaseToken.has_value() ? jni::make_jstring(value.purchaseToken.value()) : nullptr,
        value.quantity,
        value.quantityIOS.has_value() ? jni::JDouble::valueOf(value.quantityIOS.value()) : nullptr,
        value.reasonIOS.has_value() ? jni::make_jstring(value.reasonIOS.value()) : nullptr,
        value.reasonStringRepresentationIOS.has_value() ? jni::make_jstring(value.reasonStringRepresentationIOS.value()) : nullptr,
        value.revocationDateIOS.has_value() ? jni::JDouble::valueOf(value.revocationDateIOS.value()) : nullptr,
        value.revocationReasonIOS.has_value() ? jni::make_jstring(value.revocationReasonIOS.value()) : nullptr,
        value.storefrontCountryCodeIOS.has_value() ? jni::make_jstring(value.storefrontCountryCodeIOS.value()) : nullptr,
        value.subscriptionGroupIdIOS.has_value() ? jni::make_jstring(value.subscriptionGroupIdIOS.value()) : nullptr,
        value.transactionDate,
        value.transactionReasonIOS.has_value() ? jni::make_jstring(value.transactionReasonIOS.value()) : nullptr,
        value.webOrderLineItemIdIOS.has_value() ? jni::make_jstring(value.webOrderLineItemIdIOS.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::iap
